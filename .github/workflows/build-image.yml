name: Build image manually

on:
  workflow_dispatch:
    inputs:
      docker_image_tag_name:
        type: string
        description: Docker image tag name (Optional)

env:
  IBIS_IMAGE: ghcr.io/canner/wren-engine-ibis

jobs:
  prepare-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare tag name
        id: prepare_tag
        run: |
          if [ -n "${{ github.event.inputs.docker_image_tag_name }}" ]; then
            tag_name=${{ github.event.inputs.docker_image_tag_name }}
          else
            tag_name=$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9]/-/g')-$(git log -1 --pretty=%h)
          fi
          echo "tag_name=$tag_name" >> "$GITHUB_OUTPUT"
    outputs:
      tag_name: ${{ steps.prepare_tag.outputs.tag_name }}
  build-image:
    needs: prepare-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Build
        run: |
          ./mvnw clean install -B -DskipTests -P exec-jar
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/canner/wren-engine
          tags: |
            type=raw,value=${{ needs.prepare-tag.outputs.tag_name }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Prepare
        id: prepare
        run: |
          WREN_VERSION=$(./mvnw --quiet help:evaluate -Dexpression=project.version -DforceStdout)
          cp ./wren-server/target/wren-server-${WREN_VERSION}-executable.jar ./docker
          echo "WREN_VERSION=$WREN_VERSION" >> "$GITHUB_OUTPUT"
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            WREN_VERSION=${{ steps.prepare.outputs.WREN_VERSION }}
          push: true
  build-ibis-image:
    needs: prepare-tag
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Prepare platform
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IBIS_IMAGE }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          context: ./ibis-server
          build-contexts: |
            wren-core-py=./wren-core-py
            wren-core=./wren-core
          outputs: type=image,name=${{ env.IBIS_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs: [ prepare-tag, build-ibis-image ]
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IBIS_IMAGE }}
          tags: |
            type=raw,value=${{ needs.prepare-tag.outputs.tag_name }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IBIS_IMAGE }}@sha256:%s ' *) \
            --tag ${{ steps.meta.outputs.tags }}
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ steps.meta.outputs.tags }}
