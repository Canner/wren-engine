name: Build image

on:
  workflow_dispatch:
    inputs:
      docker_image_tag_name:
        type: string
        description: Docker image tag name (Optional)

jobs:
  prepare-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare tag name
        id: prepare_tag
        run: |
          if [ -n "${{ github.event.inputs.docker_image_tag_name }}" ]; then
            tag_name=${{ github.event.inputs.docker_image_tag_name }}
          else
            tag_name=$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9]/-/g')-$(git log -1 --pretty=%h)
          fi
          echo "tag_name=$tag_name" >> "$GITHUB_OUTPUT"
    outputs:
      tag_name: ${{ steps.prepare_tag.outputs.tag_name }}
  build-image:
    needs: prepare-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Build
        run: |
          ./mvnw clean install -B -DskipTests -P exec-jar
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        env:
          TAG_NAME: ${{ needs.prepare-tag.outputs.tag_name }}
        run: |
          WREN_VERSION=$(./mvnw --quiet help:evaluate -Dexpression=project.version -DforceStdout)
          cd ./docker
          cp ../wren-server/target/wren-server-${WREN_VERSION}-executable.jar ./
          cp -r ../wren-sqlglot-server/ ./
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag ghcr.io/canner/wren-engine:$TAG_NAME \
            --push -f ./Dockerfile \
            --build-arg "WREN_VERSION=${WREN_VERSION}" .
  build-ibis-image:
    needs: prepare-tag
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ibis-server
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml
      - uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.7.1
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install --without ibis,dev
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and Push Docker image
        env:
          TAG_NAME: ${{ needs.prepare-tag.outputs.tag_name }}
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag ghcr.io/canner/wren-engine-ibis:${TAG_NAME} \
            --file Dockerfile \
            --push .
