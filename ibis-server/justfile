default:
    @just --list --unsorted

build-core:
    cd ../wren-modeling-py && just build

core-wheel-path := "../wren-modeling-py/target/wheels/wren_modeling_py-*.whl"

install-core: build-core
    # Using pip install to avoid adding wheel to pyproject.toml
    poetry run pip install {{core-wheel-path}}

update-core: build-core
    poetry run pip install --force-reinstall {{core-wheel-path}}

install:
    poetry install
    just install-core

pre-commit-install:
    poetry run pre-commit install

maturin:
    poetry run maturin develop

port := "8000"

run:
    poetry run fastapi run --port {{port}}

dev:
    poetry run fastapi dev --port {{port}}

test:
    poetry run pytest

docker-build:
# alias for `docker-build`
dbuild:
    docker image build . -t wren-engine-ibis

docker-run:
# alias for `docker-run`
drun:
    docker run -it --rm -p 8000:8000 --env-file .env wren-engine-ibis

lint:
    poetry run ruff format -q . --check
    poetry run ruff check .

format:
# alias for `format`
fmt:
    poetry run ruff format .
    poetry run ruff check --fix .
    taplo fmt
