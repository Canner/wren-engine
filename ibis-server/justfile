default:
    @just --list --unsorted

build-core *args:
    cd ../wren-modeling-py && just install && just build {{args}}

core-wheel-path := "../wren-modeling-py/target/wheels/wren_modeling_py-*.whl"

install-core *args:
    just build-core {{args}}
    # Using pip install to avoid adding wheel to pyproject.toml
    poetry run pip install {{core-wheel-path}}

update-core: build-core
    poetry run pip install --force-reinstall {{core-wheel-path}}

install *args:
    poetry install {{args}}

pre-commit-install:
    poetry run pre-commit install

port := "8000"

run:
    poetry run fastapi run --port {{port}}

dev:
    poetry run fastapi dev --port {{port}}

# run the pytest tests for the given marker
test MARKER:
    poetry run pytest -m {{ MARKER }}

docker-build:
# alias for `docker-build`
dbuild:
    docker buildx build -t wren-engine-ibis -f Dockerfile \
        --build-context wren-modeling-py=../wren-modeling-py \
        --build-context wren-modeling-rs=../wren-modeling-rs \
        .

docker-run:
# alias for `docker-run`
drun:
    docker run -it --rm -p 8000:8000 --env-file .env wren-engine-ibis

lint:
    poetry run ruff format -q . --check
    poetry run ruff check .

format:
# alias for `format`
fmt:
    poetry run ruff format .
    poetry run ruff check --fix .
    taplo fmt
