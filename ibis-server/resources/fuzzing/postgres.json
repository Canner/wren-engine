[
  {
    "id": 1,
    "function_name": "regexp_count",
    "sql": "SELECT regexp_count('hello world hello', 'hello') AS result"
  },
  {
    "id": 2,
    "function_name": "array_union",
    "sql": "SELECT array_union([1, 2, 3], [3, 4, 5]) AS result"
  },
  {
    "id": 3,
    "function_name": "uuid",
    "sql": "SELECT uuid() AS result"
  },
  {
    "id": 4,
    "function_name": "substr_index",
    "sql": "SELECT substr_index('www.example.com', '.', 2) AS result"
  },
  {
    "id": 5,
    "function_name": "atan",
    "sql": "SELECT atan(1.0) AS result"
  },
  {
    "id": 6,
    "function_name": "log",
    "sql": "SELECT log(100, 10) AS result"
  },
  {
    "id": 7,
    "function_name": "current_time",
    "sql": "SELECT current_time() AS result"
  },
  {
    "id": 8,
    "function_name": "array_join",
    "sql": "SELECT array_join(['hello', 'world'], ' ') AS result"
  },
  {
    "id": 9,
    "function_name": "sin",
    "sql": "SELECT sin(3.14159/2) AS result"
  },
  {
    "id": 10,
    "function_name": "now",
    "sql": "SELECT now() AS result"
  },
  {
    "id": 11,
    "function_name": "iszero",
    "sql": "SELECT iszero(0.0) AS result"
  },
  {
    "id": 12,
    "function_name": "list_extract",
    "sql": "SELECT list_extract([10, 20, 30], 2) AS result"
  },
  {
    "id": 13,
    "function_name": "ends_with",
    "sql": "SELECT ends_with('hello world', 'world') AS result"
  },
  {
    "id": 14,
    "function_name": "least",
    "sql": "SELECT least(10, 5, 8, 3) AS result"
  },
  {
    "id": 15,
    "function_name": "contains",
    "sql": "SELECT contains('hello world', 'world') AS result"
  },
  {
    "id": 16,
    "function_name": "array_position",
    "sql": "SELECT array_position([1, 2, 3, 2], 2) AS result"
  },
  {
    "id": 17,
    "function_name": "decode",
    "sql": "SELECT decode('aGVsbG8=', 'base64') AS result"
  },
  {
    "id": 18,
    "function_name": "list_distance",
    "sql": "SELECT list_distance([1.0, 2.0], [3.0, 4.0]) AS result"
  },
  {
    "id": 19,
    "function_name": "degrees",
    "sql": "SELECT degrees(3.14159) AS result"
  },
  {
    "id": 20,
    "function_name": "concat_ws",
    "sql": "SELECT concat_ws('-', 'hello', 'world', 'test') AS result"
  },
  {
    "id": 21,
    "function_name": "to_char",
    "sql": "SELECT to_char(now(), '%Y-%m-%d') AS result"
  },
  {
    "id": 22,
    "function_name": "date_part",
    "sql": "SELECT date_part('year', now()) AS result"
  },
  {
    "id": 23,
    "function_name": "exp",
    "sql": "SELECT exp(1.0) AS result"
  },
  {
    "id": 24,
    "function_name": "repeat",
    "sql": "SELECT repeat('hello', 3) AS result"
  },
  {
    "id": 25,
    "function_name": "pow",
    "sql": "SELECT pow(2, 3) AS result"
  },
  {
    "id": 26,
    "function_name": "asinh",
    "sql": "SELECT asinh(1.0) AS result"
  },
  {
    "id": 27,
    "function_name": "atanh",
    "sql": "SELECT atanh(0.5) AS result"
  },
  {
    "id": 28,
    "function_name": "sha512",
    "sql": "SELECT sha512('hello world') AS result"
  },
  {
    "id": 29,
    "function_name": "array_has_any",
    "sql": "SELECT array_has_any([1, 2, 3], [3, 4, 5]) AS result"
  },
  {
    "id": 30,
    "function_name": "to_date",
    "sql": "SELECT to_date('2023-07-20') AS result"
  },
  {
    "id": 31,
    "function_name": "array_cat",
    "sql": "SELECT array_cat([1, 2], [3, 4]) AS result"
  },
  {
    "id": 32,
    "function_name": "list_positions",
    "sql": "SELECT list_positions([1, 2, 3, 2, 4], 2) AS result"
  },
  {
    "id": 33,
    "function_name": "isnan",
    "sql": "SELECT isnan(sqrt(-1)) AS result"
  },
  {
    "id": 34,
    "function_name": "arrays_overlap",
    "sql": "SELECT arrays_overlap([1, 2, 3], [3, 4, 5]) AS result"
  },
  {
    "id": 35,
    "function_name": "lcm",
    "sql": "SELECT lcm(12, 18) AS result"
  },
  {
    "id": 36,
    "function_name": "list_slice",
    "sql": "SELECT list_slice([1, 2, 3, 4, 5], 2, 4) AS result"
  },
  {
    "id": 37,
    "function_name": "sha224",
    "sql": "SELECT sha224('hello world') AS result"
  },
  {
    "id": 38,
    "function_name": "nvl2",
    "sql": "SELECT nvl2(null, 'not null', 'is null') AS result"
  },
  {
    "id": 39,
    "function_name": "pi",
    "sql": "SELECT pi() AS result"
  },
  {
    "id": 40,
    "function_name": "array_resize",
    "sql": "SELECT array_resize([1, 2], 5, 0) AS result"
  },
  {
    "id": 41,
    "function_name": "cbrt",
    "sql": "SELECT cbrt(27) AS result"
  },
  {
    "id": 42,
    "function_name": "array_prepend",
    "sql": "SELECT array_prepend(0, [1, 2, 3]) AS result"
  },
  {
    "id": 43,
    "function_name": "ifnull",
    "sql": "SELECT ifnull(null, 'default') AS result"
  },
  {
    "id": 44,
    "function_name": "lpad",
    "sql": "SELECT lpad('hello', 10, '*') AS result"
  },
  {
    "id": 45,
    "function_name": "list_dims",
    "sql": "SELECT list_dims([[1, 2], [3, 4]]) AS result"
  },
  {
    "id": 46,
    "function_name": "array_append",
    "sql": "SELECT array_append([1, 2, 3], 4) AS result"
  },
  {
    "id": 47,
    "function_name": "sha384",
    "sql": "SELECT sha384('hello world') AS result"
  },
  {
    "id": 48,
    "function_name": "sha256",
    "sql": "SELECT sha256('hello world') AS result"
  },
  {
    "id": 49,
    "function_name": "current_date",
    "sql": "SELECT current_date() AS result"
  },
  {
    "id": 50,
    "function_name": "list_empty",
    "sql": "SELECT list_empty([]) AS result"
  },
  {
    "id": 51,
    "function_name": "regexp_like",
    "sql": "SELECT regexp_like('hello123', '[0-9]+') AS result"
  },
  {
    "id": 52,
    "function_name": "string_to_list",
    "sql": "SELECT string_to_list('a,b,c', ',') AS result"
  },
  {
    "id": 53,
    "function_name": "left",
    "sql": "SELECT left('hello world', 5) AS result"
  },
  {
    "id": 54,
    "function_name": "to_timestamp_nanos",
    "sql": "SELECT to_timestamp_nanos('2023-07-20T05:44:00') AS result"
  },
  {
    "id": 55,
    "function_name": "upper",
    "sql": "SELECT upper('hello world') AS result"
  },
  {
    "id": 56,
    "function_name": "position",
    "sql": "SELECT position('world' IN 'hello world') AS result"
  },
  {
    "id": 57,
    "function_name": "right",
    "sql": "SELECT right('hello world', 5) AS result"
  },
  {
    "id": 58,
    "function_name": "asin",
    "sql": "SELECT asin(0.5) AS result"
  },
  {
    "id": 59,
    "function_name": "list_push_front",
    "sql": "SELECT list_push_front([1, 2, 3], 0) AS result"
  },
  {
    "id": 60,
    "function_name": "list_length",
    "sql": "SELECT list_length([1, 2, 3, 4, 5]) AS result"
  },
  {
    "id": 61,
    "function_name": "sinh",
    "sql": "SELECT sinh(1.0) AS result"
  },
  {
    "id": 62,
    "function_name": "list_position",
    "sql": "SELECT list_position([1, 2, 3, 2], 2) AS result"
  },
  {
    "id": 63,
    "function_name": "array_pop_back",
    "sql": "SELECT array_pop_back([1, 2, 3, 4]) AS result"
  },
  {
    "id": 64,
    "function_name": "array_any_value",
    "sql": "SELECT array_any_value([null, null, 3, 4]) AS result"
  },
  {
    "id": 65,
    "function_name": "array_intersect",
    "sql": "SELECT array_intersect([1, 2, 3], [2, 3, 4]) AS result"
  },
  {
    "id": 66,
    "function_name": "list_cat",
    "sql": "SELECT list_cat([1, 2], [3, 4]) AS result"
  },
  {
    "id": 67,
    "function_name": "string_to_array",
    "sql": "SELECT string_to_array('a,b,c', ',') AS result"
  },
  {
    "id": 68,
    "function_name": "map_keys",
    "sql": "SELECT map_keys(map(['a', 'b'], [1, 2])) AS result"
  },
  {
    "id": 69,
    "function_name": "acos",
    "sql": "SELECT acos(0.5) AS result"
  },
  {
    "id": 70,
    "function_name": "list_to_string",
    "sql": "SELECT list_to_string([1, 2, 3], ',') AS result"
  },
  {
    "id": 71,
    "function_name": "round",
    "sql": "SELECT round(3.14159, 2) AS result"
  },
  {
    "id": 72,
    "function_name": "range",
    "sql": "SELECT range(1, 10, 2) AS result"
  },
  {
    "id": 73,
    "function_name": "array_reverse",
    "sql": "SELECT array_reverse([1, 2, 3, 4]) AS result"
  },
  {
    "id": 74,
    "function_name": "atan2",
    "sql": "SELECT atan2(1.0, 1.0) AS result"
  },
  {
    "id": 75,
    "function_name": "array_replace_n",
    "sql": "SELECT array_replace_n([1, 2, 2, 3], 2, 9, 1) AS result"
  },
  {
    "id": 76,
    "function_name": "initcap",
    "sql": "SELECT initcap('hello world test') AS result"
  },
  {
    "id": 77,
    "function_name": "replace",
    "sql": "SELECT replace('hello world', 'world', 'universe') AS result"
  },
  {
    "id": 78,
    "function_name": "list_has_any",
    "sql": "SELECT list_has_any([1, 2, 3], [3, 4, 5]) AS result"
  },
  {
    "id": 79,
    "function_name": "struct",
    "sql": "SELECT struct(1 as a, 'hello' as b) AS result"
  },
  {
    "id": 80,
    "function_name": "btrim",
    "sql": "SELECT btrim('  hello world  ') AS result"
  },
  {
    "id": 81,
    "function_name": "to_timestamp_seconds",
    "sql": "SELECT to_timestamp_seconds(1690689840) AS result"
  },
  {
    "id": 82,
    "function_name": "array_ndims",
    "sql": "SELECT array_ndims([[1, 2], [3, 4]]) AS result"
  },
  {
    "id": 83,
    "function_name": "list_distinct",
    "sql": "SELECT list_distinct([1, 2, 2, 3, 3, 4]) AS result"
  },
  {
    "id": 84,
    "function_name": "list_repeat",
    "sql": "SELECT list_repeat(5, 3) AS result"
  },
  {
    "id": 85,
    "function_name": "datetrunc",
    "sql": "SELECT datetrunc('day', now()) AS result"
  },
  {
    "id": 86,
    "function_name": "flatten",
    "sql": "SELECT flatten([[1, 2], [3, 4], [5]]) AS result"
  },
  {
    "id": 87,
    "function_name": "to_hex",
    "sql": "SELECT to_hex(255) AS result"
  },
  {
    "id": 88,
    "function_name": "factorial",
    "sql": "SELECT factorial(5) AS result"
  },
  {
    "id": 89,
    "function_name": "substring",
    "sql": "SELECT substring('hello world', 7, 5) AS result"
  },
  {
    "id": 90,
    "function_name": "to_unixtime",
    "sql": "SELECT to_unixtime('2023-07-20T05:44:00') AS result"
  },
  {
    "id": 91,
    "function_name": "octet_length",
    "sql": "SELECT octet_length('hello world') AS result"
  },
  {
    "id": 92,
    "function_name": "array_sort",
    "sql": "SELECT array_sort([3, 1, 4, 1, 5]) AS result"
  },
  {
    "id": 93,
    "function_name": "array_contains",
    "sql": "SELECT array_contains([1, 2, 3], 2) AS result"
  },
  {
    "id": 94,
    "function_name": "nullif",
    "sql": "SELECT nullif(5, 5) AS result"
  },
  {
    "id": 95,
    "function_name": "log10",
    "sql": "SELECT log10(100) AS result"
  },
  {
    "id": 96,
    "function_name": "sqrt",
    "sql": "SELECT sqrt(25) AS result"
  },
  {
    "id": 97,
    "function_name": "to_timestamp",
    "sql": "SELECT to_timestamp('2023-07-20T05:44:00') AS result"
  },
  {
    "id": 98,
    "function_name": "digest",
    "sql": "SELECT digest('hello world', 'sha256') AS result"
  },
  {
    "id": 99,
    "function_name": "tan",
    "sql": "SELECT tan(3.14159/4) AS result"
  },
  {
    "id": 100,
    "function_name": "array_replace_all",
    "sql": "SELECT array_replace_all([1, 2, 2, 3], 2, 9) AS result"
  },
  {
    "id": 101,
    "function_name": "make_array",
    "sql": "SELECT make_array(1, 2, 3, 4, 5) AS result"
  },
  {
    "id": 102,
    "function_name": "floor",
    "sql": "SELECT floor(3.7) AS result"
  },
  {
    "id": 103,
    "function_name": "ceil",
    "sql": "SELECT ceil(3.2) AS result"
  },
  {
    "id": 104,
    "function_name": "md5",
    "sql": "SELECT md5('hello world') AS result"
  },
  {
    "id": 105,
    "function_name": "reverse",
    "sql": "SELECT reverse('hello world') AS result"
  },
  {
    "id": 106,
    "function_name": "lower",
    "sql": "SELECT lower('HELLO WORLD') AS result"
  },
  {
    "id": 107,
    "function_name": "levenshtein",
    "sql": "SELECT levenshtein('kitten', 'sitting') AS result"
  },
  {
    "id": 108,
    "function_name": "chr",
    "sql": "SELECT chr(65) AS result"
  },
  {
    "id": 109,
    "function_name": "greatest",
    "sql": "SELECT greatest(10, 5, 8, 15, 3) AS result"
  },
  {
    "id": 110,
    "function_name": "length",
    "sql": "SELECT length('hello world') AS result"
  },
  {
    "id": 111,
    "function_name": "make_date",
    "sql": "SELECT make_date(2023, 7, 20) AS result"
  },
  {
    "id": 112,
    "function_name": "strpos",
    "sql": "SELECT strpos('hello world', 'world') AS result"
  },
  {
    "id": 113,
    "function_name": "tanh",
    "sql": "SELECT tanh(1.0) AS result"
  },
  {
    "id": 114,
    "function_name": "gcd",
    "sql": "SELECT gcd(48, 18) AS result"
  },
  {
    "id": 115,
    "function_name": "split_part",
    "sql": "SELECT split_part('one,two,three', ',', 2) AS result"
  },
  {
    "id": 116,
    "function_name": "regexp_match",
    "sql": "SELECT regexp_match('hello123world', '[0-9]+') AS result"
  },
  {
    "id": 117,
    "function_name": "ascii",
    "sql": "SELECT ascii('A') AS result"
  },
  {
    "id": 118,
    "function_name": "translate",
    "sql": "SELECT translate('hello', 'el', 'xy') AS result"
  },
  {
    "id": 119,
    "function_name": "starts_with",
    "sql": "SELECT starts_with('hello world', 'hello') AS result"
  },
  {
    "id": 120,
    "function_name": "acosh",
    "sql": "SELECT acosh(2.0) AS result"
  },
  {
    "id": 121,
    "function_name": "regexp_replace",
    "sql": "SELECT regexp_replace('hello123world', '[0-9]+', 'XXX') AS result"
  },
  {
    "id": 122,
    "function_name": "character_length",
    "sql": "SELECT character_length('hello world') AS result"
  },
  {
    "id": 123,
    "function_name": "substr",
    "sql": "SELECT substr('hello world', 7, 5) AS result"
  },
  {
    "id": 124,
    "function_name": "abs",
    "sql": "SELECT abs(-42) AS result"
  },
  {
    "id": 125,
    "function_name": "bit_length",
    "sql": "SELECT bit_length('hello') AS result"
  },
  {
    "id": 126,
    "function_name": "concat",
    "sql": "SELECT concat('hello', ' ', 'world') AS result"
  },
  {
    "id": 127,
    "function_name": "rpad",
    "sql": "SELECT rpad('hello', 10, '*') AS result"
  },
  {
    "id": 128,
    "function_name": "random",
    "sql": "SELECT random() AS result"
  },
  {
    "id": 129,
    "function_name": "ltrim",
    "sql": "SELECT ltrim('   hello world') AS result"
  },
  {
    "id": 130,
    "function_name": "map_values",
    "sql": "SELECT map_values(map(['a', 'b'], [1, 2])) AS result"
  },
  {
    "id": 131,
    "function_name": "coalesce",
    "sql": "SELECT coalesce(null, null, 'first non-null') AS result"
  },
  {
    "id": 132,
    "function_name": "log2",
    "sql": "SELECT log2(8) AS result"
  },
  {
    "id": 133,
    "function_name": "cos",
    "sql": "SELECT cos(0) AS result"
  },
  {
    "id": 134,
    "function_name": "rtrim",
    "sql": "SELECT rtrim('hello world   ') AS result"
  },
  {
    "id": 135,
    "function_name": "generate_series",
    "sql": "SELECT generate_series(1, 5) AS result"
  },
  {
    "id": 136,
    "function_name": "trunc",
    "sql": "SELECT trunc(3.14159, 2) AS result"
  },
  {
    "id": 137,
    "function_name": "instr",
    "sql": "SELECT instr('hello world', 'world') AS result"
  },
  {
    "id": 138,
    "function_name": "to_timestamp_millis",
    "sql": "SELECT to_timestamp_millis(1690689840000) AS result"
  },
  {
    "id": 139,
    "function_name": "signum",
    "sql": "SELECT signum(-42) AS result"
  },
  {
    "id": 140,
    "function_name": "cosh",
    "sql": "SELECT cosh(1.0) AS result"
  },
  {
    "id": 141,
    "function_name": "cardinality",
    "sql": "SELECT cardinality([1, 2, 3, 4, 5]) AS result"
  },
  {
    "id": 142,
    "function_name": "cot",
    "sql": "SELECT cot(3.14159/4) AS result"
  },
  {
    "id": 143,
    "function_name": "power",
    "sql": "SELECT power(2, 10) AS result"
  },
  {
    "id": 144,
    "function_name": "ln",
    "sql": "SELECT ln(2.71828) AS result"
  },
  {
    "id": 145,
    "function_name": "radians",
    "sql": "SELECT radians(180) AS result"
  },
  {
    "id": 146,
    "function_name": "find_in_set",
    "sql": "SELECT find_in_set('b', 'a,b,c,d') AS result"
  },
  {
    "id": 147,
    "function_name": "encode",
    "sql": "SELECT encode('hello', 'base64') AS result"
  },
  {
    "id": 148,
    "function_name": "version",
    "sql": "SELECT version() AS result"
  },
  {
    "id": 149,
    "function_name": "trim",
    "sql": "SELECT trim('  hello world  ') AS result"
  },
  {
    "id": 150,
    "function_name": "empty",
    "sql": "SELECT empty([]) AS result"
  },
  {
    "id": 151,
    "function_name": "var",
    "sql": "SELECT var(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 152,
    "function_name": "approx_distinct",
    "sql": "SELECT approx_distinct(column1) AS result FROM (VALUES (1), (2), (2), (3), (3), (3)) AS t(column1)"
  },
  {
    "id": 153,
    "function_name": "covar",
    "sql": "SELECT covar(column1, column2) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 154,
    "function_name": "approx_percentile_cont_with_weight",
    "sql": "SELECT approx_percentile_cont_with_weight(column1, 0.5, column2) AS result FROM (VALUES (10, 1), (20, 2), (30, 1)) AS t(column1, column2)"
  },
  {
    "id": 155,
    "function_name": "approx_median",
    "sql": "SELECT approx_median(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 156,
    "function_name": "covar_pop",
    "sql": "SELECT covar_pop(column1, column2) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 157,
    "function_name": "bool_and",
    "sql": "SELECT bool_and(column1) AS result FROM (VALUES (true), (true), (false)) AS t(column1)"
  },
  {
    "id": 158,
    "function_name": "grouping",
    "sql": "SELECT column1, grouping(column1) AS result FROM (VALUES (1), (2), (3)) AS t(column1) GROUP BY ROLLUP(column1)"
  },
  {
    "id": 159,
    "function_name": "row_number",
    "sql": "SELECT column1, row_number() OVER (ORDER BY column1) AS result FROM (VALUES (3), (1), (4), (2)) AS t(column1)"
  },
  {
    "id": 160,
    "function_name": "lag",
    "sql": "SELECT column1, lag(column1, 1) OVER (ORDER BY column1) AS result FROM (VALUES (1), (2), (3), (4)) AS t(column1)"
  },
  {
    "id": 161,
    "function_name": "mean",
    "sql": "SELECT mean(column1) AS result FROM (VALUES (10), (20), (30), (40)) AS t(column1)"
  },
  {
    "id": 162,
    "function_name": "var_sample",
    "sql": "SELECT var_sample(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 163,
    "function_name": "approx_percentile_cont",
    "sql": "SELECT approx_percentile_cont(column1, 0.75) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 164,
    "function_name": "first_value",
    "sql": "SELECT column1, first_value(column1) OVER (ORDER BY column1) AS result FROM (VALUES (3), (1), (4), (2)) AS t(column1)"
  },
  {
    "id": 165,
    "function_name": "regr_intercept",
    "sql": "SELECT regr_intercept(column2, column1) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 166,
    "function_name": "last_value",
    "sql": "SELECT last_value(column1) AS result FROM (VALUES (1), (2), (3), (4)) AS t(column1)"
  },
  {
    "id": 167,
    "function_name": "regr_sxy",
    "sql": "SELECT regr_sxy(column2, column1) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 168,
    "function_name": "nth_value",
    "sql": "SELECT nth_value(column1, 2) AS result FROM (VALUES (1), (2), (3), (4)) AS t(column1)"
  },
  {
    "id": 169,
    "function_name": "regr_slope",
    "sql": "SELECT regr_slope(column2, column1) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 170,
    "function_name": "sum",
    "sql": "SELECT sum(column1) AS result FROM (VALUES (10), (20), (30), (40)) AS t(column1)"
  },
  {
    "id": 171,
    "function_name": "regr_syy",
    "sql": "SELECT regr_syy(column2, column1) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 172,
    "function_name": "avg",
    "sql": "SELECT avg(column1) AS result FROM (VALUES (10), (20), (30), (40)) AS t(column1)"
  },
  {
    "id": 173,
    "function_name": "var_population",
    "sql": "SELECT var_population(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 174,
    "function_name": "stddev_samp",
    "sql": "SELECT stddev_samp(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 175,
    "function_name": "bit_or",
    "sql": "SELECT bit_or(column1) AS result FROM (VALUES (1), (2), (4), (8)) AS t(column1)"
  },
  {
    "id": 176,
    "function_name": "bit_xor",
    "sql": "SELECT bit_xor(column1) AS result FROM (VALUES (1), (3), (5), (7)) AS t(column1)"
  },
  {
    "id": 177,
    "function_name": "regr_avgx",
    "sql": "SELECT regr_avgx(column2, column1) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 178,
    "function_name": "min",
    "sql": "SELECT min(column1) AS result FROM (VALUES (10), (5), (15), (3)) AS t(column1)"
  },
  {
    "id": 179,
    "function_name": "median",
    "sql": "SELECT median(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 180,
    "function_name": "last_value_window",
    "sql": "SELECT column1, last_value(column1) OVER (ORDER BY column1) AS result FROM (VALUES (1), (2), (3), (4)) AS t(column1)"
  },
  {
    "id": 181,
    "function_name": "regr_count",
    "sql": "SELECT regr_count(column2, column1) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (null, 8)) AS t(column1, column2)"
  },
  {
    "id": 182,
    "function_name": "regr_sxx",
    "sql": "SELECT regr_sxx(column2, column1) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 183,
    "function_name": "corr",
    "sql": "SELECT corr(column1, column2) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 184,
    "function_name": "max",
    "sql": "SELECT max(column1) AS result FROM (VALUES (10), (5), (15), (3)) AS t(column1)"
  },
  {
    "id": 185,
    "function_name": "covar_samp",
    "sql": "SELECT covar_samp(column1, column2) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 186,
    "function_name": "count",
    "sql": "SELECT count(*) AS result FROM (VALUES (1), (2), (3), (null)) AS t(column1)"
  },
  {
    "id": 187,
    "function_name": "regr_avgy",
    "sql": "SELECT regr_avgy(column2, column1) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 188,
    "function_name": "bit_and",
    "sql": "SELECT bit_and(column1) AS result FROM (VALUES (7), (3), (1)) AS t(column1)"
  },
  {
    "id": 189,
    "function_name": "first_value_agg",
    "sql": "SELECT first_value(column1 ORDER BY column2) AS result FROM (VALUES (10, 3), (20, 1), (30, 2)) AS t(column1, column2)"
  },
  {
    "id": 190,
    "function_name": "stddev_pop",
    "sql": "SELECT stddev_pop(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 191,
    "function_name": "stddev",
    "sql": "SELECT stddev(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 192,
    "function_name": "lead",
    "sql": "SELECT column1, lead(column1, 1) OVER (ORDER BY column1) AS result FROM (VALUES (1), (2), (3), (4)) AS t(column1)"
  },
  {
    "id": 193,
    "function_name": "rank",
    "sql": "SELECT column1, rank() OVER (ORDER BY column1) AS result FROM (VALUES (1), (2), (2), (3)) AS t(column1)"
  },
  {
    "id": 194,
    "function_name": "ntile",
    "sql": "SELECT column1, ntile(4) OVER (ORDER BY column1) AS result FROM (VALUES (1), (2), (3), (4), (5), (6), (7), (8)) AS t(column1)"
  },
  {
    "id": 195,
    "function_name": "percent_rank",
    "sql": "SELECT column1, percent_rank() OVER (ORDER BY column1) AS result FROM (VALUES (1), (2), (3), (4)) AS t(column1)"
  },
  {
    "id": 196,
    "function_name": "dense_rank",
    "sql": "SELECT column1, dense_rank() OVER (ORDER BY column1) AS result FROM (VALUES (1), (2), (2), (3)) AS t(column1)"
  },
  {
    "id": 197,
    "function_name": "string_agg",
    "sql": "SELECT string_agg(column1, ',') AS result FROM (VALUES ('a'), ('b'), ('c')) AS t(column1)"
  },
  {
    "id": 198,
    "function_name": "var_pop",
    "sql": "SELECT var_pop(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 199,
    "function_name": "var_samp",
    "sql": "SELECT var_samp(column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 200,
    "function_name": "bool_or",
    "sql": "SELECT bool_or(column1) AS result FROM (VALUES (false), (false), (true)) AS t(column1)"
  },
  {
    "id": 201,
    "function_name": "regr_r2",
    "sql": "SELECT regr_r2(column2, column1) AS result FROM (VALUES (1, 2), (2, 4), (3, 6), (4, 8)) AS t(column1, column2)"
  },
  {
    "id": 202,
    "function_name": "array_agg",
    "sql": "SELECT array_agg(column1 ORDER BY column1) AS result FROM (VALUES (3), (1), (4), (2)) AS t(column1)"
  },
  {
    "id": 203,
    "function_name": "nth_value_window",
    "sql": "SELECT column1, nth_value(column1, 2) OVER (ORDER BY column1) AS result FROM (VALUES (1), (2), (3), (4)) AS t(column1)"
  },
  {
    "id": 204,
    "function_name": "cume_dist",
    "sql": "SELECT column1, cume_dist() OVER (ORDER BY column1) AS result FROM (VALUES (1), (2), (3), (4)) AS t(column1)"
  },
  {
    "id": 205,
    "function_name": "get_field",
    "sql": "SELECT get_field(row(1 as a, 'hello' as b), 'a') AS result"
  },
  {
    "id": 206,
    "function_name": "map_extract",
    "sql": "SELECT map_extract(map(['a', 'b'], [1, 2]), 'a') AS result"
  },
  {
    "id": 207,
    "function_name": "element_at",
    "sql": "SELECT element_at(map(['a', 'b'], [1, 2]), 'b') AS result"
  },
  {
    "id": 208,
    "function_name": "arrow_typeof",
    "sql": "SELECT arrow_typeof(123) AS result"
  },
  {
    "id": 209,
    "function_name": "make_list",
    "sql": "SELECT make_list(1, 2, 3, 4, 5) AS result"
  },
  {
    "id": 210,
    "function_name": "array_to_string",
    "sql": "SELECT array_to_string([1, 2, 3], '-') AS result"
  },
  {
    "id": 211,
    "function_name": "map",
    "sql": "SELECT map(['key1', 'key2'], ['value1', 'value2']) AS result"
  },
  {
    "id": 212,
    "function_name": "to_timestamp_micros",
    "sql": "SELECT to_timestamp_micros(1690689840000000) AS result"
  },
  {
    "id": 213,
    "function_name": "array_indexof",
    "sql": "SELECT array_indexof([1, 2, 3, 2, 4], 2) AS result"
  },
  {
    "id": 214,
    "function_name": "to_local_time",
    "sql": "SELECT to_local_time(now()) AS result"
  },
  {
    "id": 215,
    "function_name": "list_replace",
    "sql": "SELECT list_replace([1, 2, 3, 2, 4], 2, 99) AS result"
  },
  {
    "id": 216,
    "function_name": "list_remove_all",
    "sql": "SELECT list_remove_all([1, 2, 2, 3, 2, 4], 2) AS result"
  },
  {
    "id": 217,
    "function_name": "date_bin",
    "sql": "SELECT date_bin(interval '15 minutes', now()) AS result"
  },
  {
    "id": 218,
    "function_name": "list_has_all",
    "sql": "SELECT list_has_all([1, 2, 3, 4], [2, 3]) AS result"
  },
  {
    "id": 219,
    "function_name": "nanvl",
    "sql": "SELECT nanvl(sqrt(-1), 0) AS result"
  },
  {
    "id": 220,
    "function_name": "union_extract",
    "sql": "SELECT union_extract(make_union(0, 'hello'), 'field0') AS result"
  },
  {
    "id": 221,
    "function_name": "list_except",
    "sql": "SELECT list_except([1, 2, 3, 4], [2, 4]) AS result"
  },
  {
    "id": 222,
    "function_name": "list_pop_front",
    "sql": "SELECT list_pop_front([1, 2, 3, 4]) AS result"
  },
  {
    "id": 223,
    "function_name": "named_struct",
    "sql": "SELECT named_struct('name', 'John', 'age', 30) AS result"
  },
  {
    "id": 224,
    "function_name": "array_pop_front",
    "sql": "SELECT array_pop_front([1, 2, 3, 4]) AS result"
  },
  {
    "id": 225,
    "function_name": "list_indexof",
    "sql": "SELECT list_indexof([1, 2, 3, 2, 4], 2) AS result"
  },
  {
    "id": 226,
    "function_name": "from_unixtime",
    "sql": "SELECT from_unixtime(1690689840) AS result"
  },
  {
    "id": 227,
    "function_name": "list_replace_n",
    "sql": "SELECT list_replace_n([1, 2, 2, 3, 2, 4], 2, 99, 2) AS result"
  },
  {
    "id": 228,
    "function_name": "array_distance",
    "sql": "SELECT array_distance([1.0, 2.0, 3.0], [4.0, 5.0, 6.0]) AS result"
  },
  {
    "id": 229,
    "function_name": "array_has_all",
    "sql": "SELECT array_has_all([1, 2, 3, 4, 5], [2, 4]) AS result"
  },
  {
    "id": 230,
    "function_name": "array_empty",
    "sql": "SELECT array_empty([]) AS result"
  },
  {
    "id": 231,
    "function_name": "array_distinct",
    "sql": "SELECT array_distinct([1, 2, 2, 3, 3, 4]) AS result"
  },
  {
    "id": 232,
    "function_name": "list_pop_back",
    "sql": "SELECT list_pop_back([1, 2, 3, 4]) AS result"
  },
  {
    "id": 233,
    "function_name": "array_push_front",
    "sql": "SELECT array_push_front([1, 2, 3], 0) AS result"
  },
  {
    "id": 234,
    "function_name": "list_replace_all",
    "sql": "SELECT list_replace_all([1, 2, 2, 3, 2, 4], 2, 99) AS result"
  },
  {
    "id": 235,
    "function_name": "array_element",
    "sql": "SELECT array_element([10, 20, 30], 2) AS result"
  },
  {
    "id": 236,
    "function_name": "array_remove",
    "sql": "SELECT array_remove([1, 2, 3, 2, 4], 2) AS result"
  },
  {
    "id": 237,
    "function_name": "list_push_back",
    "sql": "SELECT list_push_back([1, 2, 3], 4) AS result"
  },
  {
    "id": 238,
    "function_name": "list_remove_n",
    "sql": "SELECT list_remove_n([1, 2, 2, 3, 2, 4], 2, 2) AS result"
  },
  {
    "id": 239,
    "function_name": "array_replace",
    "sql": "SELECT array_replace([1, 2, 3, 2, 4], 2, 99) AS result"
  },
  {
    "id": 240,
    "function_name": "list_any_value",
    "sql": "SELECT list_any_value([null, null, 42, null]) AS result"
  },
  {
    "id": 241,
    "function_name": "list_intersect",
    "sql": "SELECT list_intersect([1, 2, 3, 4], [3, 4, 5, 6]) AS result"
  },
  {
    "id": 242,
    "function_name": "array_except",
    "sql": "SELECT array_except([1, 2, 3, 4], [2, 4]) AS result"
  },
  {
    "id": 243,
    "function_name": "array_remove_n",
    "sql": "SELECT array_remove_n([1, 2, 2, 3, 2, 4], 2, 2) AS result"
  },
  {
    "id": 244,
    "function_name": "list_remove",
    "sql": "SELECT list_remove([1, 2, 3, 2, 4], 2) AS result"
  },
  {
    "id": 245,
    "function_name": "list_concat",
    "sql": "SELECT list_concat([1, 2], [3, 4], [5, 6]) AS result"
  },
  {
    "id": 246,
    "function_name": "list_reverse",
    "sql": "SELECT list_reverse([1, 2, 3, 4, 5]) AS result"
  },
  {
    "id": 247,
    "function_name": "array_dims",
    "sql": "SELECT array_dims([[1, 2], [3, 4]]) AS result"
  },
  {
    "id": 248,
    "function_name": "list_sort",
    "sql": "SELECT list_sort([3, 1, 4, 1, 5, 9, 2, 6]) AS result"
  },
  {
    "id": 249,
    "function_name": "date_format",
    "sql": "SELECT date_format(now(), '%Y-%m-%d %H:%M:%S') AS result"
  },
  {
    "id": 250,
    "function_name": "array_push_back",
    "sql": "SELECT array_push_back([1, 2, 3], 4) AS result"
  },
  {
    "id": 251,
    "function_name": "every",
    "sql": "SELECT every(column1) AS result FROM (VALUES (true), (true), (false)) AS t(column1)"
  },
  {
    "id": 252,
    "function_name": "json_object_agg",
    "sql": "SELECT json_object_agg(column1, column2) AS result FROM (VALUES ('name', 'John'), ('age', '30')) AS t(column1, column2)"
  },
  {
    "id": 253,
    "function_name": "jsonb_object_agg",
    "sql": "SELECT jsonb_object_agg(column1, column2) AS result FROM (VALUES ('city', 'NYC'), ('country', 'USA')) AS t(column1, column2)"
  },
  {
    "id": 254,
    "function_name": "json_agg",
    "sql": "SELECT json_agg(column1) AS result FROM (VALUES (1), (2), (3)) AS t(column1)"
  },
  {
    "id": 255,
    "function_name": "percentile_disc",
    "sql": "SELECT percentile_disc(0.5) WITHIN GROUP (ORDER BY column1) AS result FROM (VALUES (1), (2), (3), (4), (5)) AS t(column1)"
  },
  {
    "id": 256,
    "function_name": "age",
    "sql": "SELECT age(now(), to_timestamp('2023-01-01T00:00:00')) AS result"
  },
  {
    "id": 257,
    "function_name": "array_lower",
    "sql": "SELECT array_lower([1, 2, 3], 1) AS result"
  },
  {
    "id": 258,
    "function_name": "array_to_json",
    "sql": "SELECT array_to_json([1, 2, 3]) AS result"
  },
  {
    "id": 259,
    "function_name": "array_upper",
    "sql": "SELECT array_upper([1, 2, 3], 1) AS result"
  },
  {
    "id": 260,
    "function_name": "convert_from",
    "sql": "SELECT convert_from(convert_to('hello', 'utf8'), 'utf8') AS result"
  },
  {
    "id": 261,
    "function_name": "convert_to",
    "sql": "SELECT convert_to('hello world', 'utf8') AS result"
  },
  {
    "id": 262,
    "function_name": "extract",
    "sql": "SELECT extract('year', now()) AS result"
  },
  {
    "id": 263,
    "function_name": "format",
    "sql": "SELECT format('Hello %s, you are %s years old', ['John', '30']) AS result"
  },
  {
    "id": 264,
    "function_name": "host",
    "sql": "SELECT host('192.168.1.1'::inet) AS result"
  },
  {
    "id": 265,
    "function_name": "isfinite",
    "sql": "SELECT isfinite(now()) AS result"
  },
  {
    "id": 266,
    "function_name": "json_object",
    "sql": "SELECT json_object(['name', 'age'], ['John', '30']) AS result"
  },
  {
    "id": 267,
    "function_name": "json_typeof",
    "sql": "SELECT json_typeof(to_json(42)) AS result"
  },
  {
    "id": 268,
    "function_name": "json_array_length",
    "sql": "SELECT json_array_length(to_json([1, 2, 3])) AS result"
  },
  {
    "id": 269,
    "function_name": "json_extract_path",
    "sql": "SELECT json_extract_path(to_json(struct('name', 'John', 'age', 30)), ['name']) AS result"
  },
  {
    "id": 270,
    "function_name": "json_object_keys",
    "sql": "SELECT json_object_keys(to_json(struct('name', 'John', 'age', 30))) AS result"
  },
  {
    "id": 271,
    "function_name": "jsonb_array_length",
    "sql": "SELECT jsonb_array_length(to_jsonb([1, 2, 3])) AS result"
  },
  {
    "id": 272,
    "function_name": "jsonb_extract_path",
    "sql": "SELECT jsonb_extract_path(to_jsonb(struct('name', 'John')), ['name']) AS result"
  },
  {
    "id": 273,
    "function_name": "jsonb_object_keys",
    "sql": "SELECT jsonb_object_keys(to_jsonb(struct('a', 1, 'b', 2))) AS result"
  },
  {
    "id": 274,
    "function_name": "jsonb_typeof",
    "sql": "SELECT jsonb_typeof(to_jsonb('hello')) AS result"
  },
  {
    "id": 275,
    "function_name": "justify_days",
    "sql": "SELECT justify_days(interval '35 days') AS result"
  },
  {
    "id": 276,
    "function_name": "justify_hours",
    "sql": "SELECT justify_hours(interval '30 hours') AS result"
  },
  {
    "id": 277,
    "function_name": "justify_interval",
    "sql": "SELECT justify_interval(interval '35 days 30 hours') AS result"
  },
  {
    "id": 278,
    "function_name": "mod",
    "sql": "SELECT mod(17, 5) AS result"
  },
  {
    "id": 279,
    "function_name": "parse_ident",
    "sql": "SELECT parse_ident('schema.table.column', true) AS result"
  },
  {
    "id": 280,
    "function_name": "pg_client_encoding",
    "sql": "SELECT pg_client_encoding() AS result"
  },
  {
    "id": 281,
    "function_name": "quote_ident",
    "sql": "SELECT quote_ident('my table') AS result"
  },
  {
    "id": 282,
    "function_name": "quote_literal",
    "sql": "SELECT quote_literal('hello world') AS result"
  },
  {
    "id": 283,
    "function_name": "quote_nullable",
    "sql": "SELECT quote_nullable(null) AS result"
  },
  {
    "id": 284,
    "function_name": "regexp_split_to_array",
    "sql": "SELECT regexp_split_to_array('one,two,three', ',') AS result"
  },
  {
    "id": 285,
    "function_name": "sign",
    "sql": "SELECT sign(-42) AS result"
  },
  {
    "id": 286,
    "function_name": "to_json",
    "sql": "SELECT to_json(struct('name', 'John', 'age', 30)) AS result"
  },
  {
    "id": 287,
    "function_name": "to_number",
    "sql": "SELECT to_number('12345.67', '99999.99') AS result"
  },
  {
    "id": 288,
    "function_name": "unistr",
    "sql": "SELECT unistr('\\0048\\0065\\006C\\006C\\006F') AS result"
  },
  {
    "id": 289,
    "function_name": "area",
    "sql": "SELECT area(circle(point(0,0), 5)) AS result"
  },
  {
    "id": 290,
    "function_name": "ceiling",
    "sql": "SELECT ceiling(3.2) AS result"
  },
  {
    "id": 291,
    "function_name": "char",
    "sql": "SELECT char('A') AS result"
  },
  {
    "id": 292,
    "function_name": "div",
    "sql": "SELECT div(17, 5) AS result"
  },
  {
    "id": 293,
    "function_name": "dlog1",
    "sql": "SELECT dlog1(2.71828) AS result"
  },
  {
    "id": 294,
    "function_name": "dlog10",
    "sql": "SELECT dlog10(100) AS result"
  },
  {
    "id": 295,
    "function_name": "is_normalized",
    "sql": "SELECT is_normalized('hello', 'NFC') AS result"
  },
  {
    "id": 296,
    "function_name": "overlaps",
    "sql": "SELECT overlaps(time '09:00:00', time '10:00:00', time '09:30:00', time '10:30:00') AS result"
  },
  {
    "id": 297,
    "function_name": "overlay",
    "sql": "SELECT overlay('hello world', 'WORLD', 7) AS result"
  },
  {
    "id": 298,
    "function_name": "regexp_instr",
    "sql": "SELECT regexp_instr('hello123world', '[0-9]+', 1, 1) AS result"
  },
  {
    "id": 299,
    "function_name": "regexp_matches",
    "sql": "SELECT regexp_matches('hello123world', '([0-9]+)', 'g') AS result"
  },
  {
    "id": 300,
    "function_name": "regexp_substr",
    "sql": "SELECT regexp_substr('hello123world', '[0-9]+') AS result"
  },
  {
    "id": 301,
    "function_name": "tand",
    "sql": "SELECT tand(45.0) AS result"
  },
  {
    "id": 302,
    "function_name": "to_ascii",
    "sql": "SELECT to_ascii('café', 'LATIN1') AS result"
  },
  {
    "id": 303,
    "function_name": "to_jsonb",
    "sql": "SELECT to_jsonb(row('name', 'John', 'active', true)) AS result"
  },
  {
    "id": 304,
    "function_name": "arrow_cast",
    "sql": "SELECT arrow_cast(123, 'Float64') AS result"
  },
  {
    "id": 305,
    "function_name": "pg_sleep",
    "sql": "SELECT 1 FROM (SELECT pg_sleep(1)) sub"
  },
  {
    "id": 306,
    "function_name": "row",
    "sql": "SELECT row('John', 30, true) AS result"
  },
  {
    "id": 307,
    "function_name": "today",
    "sql": "SELECT today() AS result"
  },
  {
    "id": 308,
    "function_name": "current_timestamp",
    "sql": "SELECT current_timestamp() AS result"
  },
  {
    "id": 309,
    "function_name": "datepart",
    "sql": "SELECT datepart('month', now()) AS result"
  },
  {
    "id": 310,
    "function_name": "substring_index",
    "sql": "SELECT substring_index('www.example.com', '.', -1) AS result"
  },
  {
    "id": 311,
    "function_name": "nvl",
    "sql": "SELECT nvl(null, 'default value') AS result"
  },
  {
    "id": 312,
    "function_name": "ifnull",
    "sql": "SELECT ifnull(null, 'fallback') AS result"
  },
  {
    "id": 313,
    "function_name": "nvl2",
    "sql": "SELECT nvl2('test', 'not null', 'is null') AS result"
  },
  {
    "id": 314,
    "function_name": "nullif",
    "sql": "SELECT nullif('same', 'same') AS result"
  },
  {
    "id": 315,
    "function_name": "coalesce",
    "sql": "SELECT coalesce(null, null, 'first valid', 'second') AS result"
  },
  {
    "id": 316,
    "function_name": "array_lower",
    "sql": "SELECT array_lower([[1, 2], [3, 4]], 2) AS result"
  },
  {
    "id": 317,
    "function_name": "array_upper",
    "sql": "SELECT array_upper([[1, 2], [3, 4]], 2) AS result"
  },
  {
    "id": 318,
    "function_name": "array_ndims",
    "sql": "SELECT array_ndims([[[1, 2]], [[3, 4]]]) AS result"
  },
  {
    "id": 319,
    "function_name": "list_ndims",
    "sql": "SELECT list_ndims([[[1, 2]], [[3, 4]]]) AS result"
  },
  {
    "id": 320,
    "function_name": "array_dims",
    "sql": "SELECT array_dims([[[1, 2]], [[3, 4]]]) AS result"
  },
  {
    "id": 321,
    "function_name": "list_dims",
    "sql": "SELECT list_dims([[[1, 2]], [[3, 4]]]) AS result"
  },
  {
    "id": 322,
    "function_name": "array_length",
    "sql": "SELECT array_length([[1, 2], [3, 4]], 1) AS result"
  },
  {
    "id": 323,
    "function_name": "list_length",
    "sql": "SELECT list_length([[1, 2], [3, 4]]) AS result"
  },
  {
    "id": 324,
    "function_name": "cardinality",
    "sql": "SELECT cardinality([[1, 2], [3, 4, 5]]) AS result"
  },
  {
    "id": 325,
    "function_name": "array_sort",
    "sql": "SELECT array_sort([3, 1, 4, 1, 5, 9, 2, 6]) AS result"
  },
  {
    "id": 326,
    "function_name": "list_sort",
    "sql": "SELECT list_sort(['cherry', 'apple', 'banana']) AS result"
  },
  {
    "id": 327,
    "function_name": "array_reverse",
    "sql": "SELECT array_reverse(['a', 'b', 'c', 'd']) AS result"
  },
  {
    "id": 328,
    "function_name": "list_reverse",
    "sql": "SELECT list_reverse([10, 20, 30, 40]) AS result"
  },
  {
    "id": 329,
    "function_name": "array_distinct",
    "sql": "SELECT array_distinct([1, 1, 2, 2, 3, 3, 4]) AS result"
  },
  {
    "id": 330,
    "function_name": "list_distinct",
    "sql": "SELECT list_distinct(['a', 'b', 'a', 'c', 'b']) AS result"
  },
  {
    "id": 331,
    "function_name": "array_repeat",
    "sql": "SELECT array_repeat('hello', 5) AS result"
  },
  {
    "id": 332,
    "function_name": "list_repeat",
    "sql": "SELECT list_repeat(42, 3) AS result"
  },
  {
    "id": 333,
    "function_name": "array_resize",
    "sql": "SELECT array_resize([1, 2, 3], 6, 99) AS result"
  },
  {
    "id": 334,
    "function_name": "list_resize",
    "sql": "SELECT list_resize(['a', 'b'], 5, 'x') AS result"
  },
  {
    "id": 335,
    "function_name": "array_concat",
    "sql": "SELECT array_concat([1, 2], [3, 4], [5, 6]) AS result"
  },
  {
    "id": 336,
    "function_name": "list_concat",
    "sql": "SELECT list_concat(['a', 'b'], ['c', 'd'], ['e']) AS result"
  },
  {
    "id": 337,
    "function_name": "array_cat",
    "sql": "SELECT array_cat([1, 2, 3], [4, 5, 6]) AS result"
  },
  {
    "id": 338,
    "function_name": "list_cat",
    "sql": "SELECT list_cat(['x', 'y'], ['z']) AS result"
  },
  {
    "id": 339,
    "function_name": "array_empty",
    "sql": "SELECT array_empty([1, 2, 3]) AS result"
  },
  {
    "id": 340,
    "function_name": "list_empty",
    "sql": "SELECT list_empty([]) AS result"
  },
  {
    "id": 341,
    "function_name": "empty",
    "sql": "SELECT empty([]) AS result"
  },
  {
    "id": 342,
    "function_name": "array_has",
    "sql": "SELECT array_has([1, 2, 3, 4], 3) AS result"
  },
  {
    "id": 343,
    "function_name": "list_has",
    "sql": "SELECT list_has(['a', 'b', 'c'], 'b') AS result"
  },
  {
    "id": 344,
    "function_name": "array_contains",
    "sql": "SELECT array_contains([10, 20, 30], 20) AS result"
  },
  {
    "id": 345,
    "function_name": "list_contains",
    "sql": "SELECT list_contains(['red', 'green', 'blue'], 'green') AS result"
  }
]