[tool.poetry]
name = "wren_engine"
version = "0.5.0"
description = ""
authors = ["Canner <dev@cannerdata.com>"]
readme = "README.md"
packages = [{ include = "python/wren_engine" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
fastapi = "0.111.0"
pydantic = "2.6.4"
uvicorn = {extras = ["standard"], version = "0.29.0"}
ibis-framework = {extras = ["mysql", "bigquery", "postgres", "snowflake"], version = "9.0.0"}
google-auth = "2.29.0"
httpx = "0.27.0"
python-dotenv = "1.0.1"
orjson = "3.10.3"
pandas = "2.2.2"
pymysql = "^1.1.1"

[tool.poetry.group.dev.dependencies]
pytest = "8.2.0"
testcontainers = {extras = ["mysql", "postgres"], version = "4.5.0"}
sqlalchemy = "2.0.30"
pre-commit = "3.7.1"
ruff = "0.4.8"
maturin = "1.6.0"

[tool.pytest.ini_options]
pythonpath = "python"
addopts = [
    "--strict-markers",
    "--import-mode=importlib"
]
markers = [
    "bigquery: mark a test as a bigquery test",
    "mysql: mark a test as a mysql test",
    "postgres: mark a test as a postgres test",
    "snowflake: mark a test as a snowflake test",
]

[tool.ruff]
target-version = "py311"

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "wren_engine"
readme = "README.md"
requires-python = ">=3.11,<3.12"
classifier = [
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python",
    "Programming Language :: Rust",
]

[tool.maturin]
python-source = "python"
module-name = "wren_engine.modeling_core"
include = [
    { path = "Cargo.lock", format = "sdist" }
]
exclude = [".github/**", "tests/**", "target/**", "wheels/**"]
locked = true
